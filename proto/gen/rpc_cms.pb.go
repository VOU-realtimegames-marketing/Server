// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: counterpart/rpc_cms.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserPlayData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          int64                  `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`                            // Ngày chơi game
	QuizGame      int32                  `protobuf:"varint,2,opt,name=quiz_game,json=quizGame,proto3" json:"quiz_game,omitempty"`    // Số lượng user chơi quizGame
	ShakeGame     int32                  `protobuf:"varint,3,opt,name=shake_game,json=shakeGame,proto3" json:"shake_game,omitempty"` // Số lượng user chơi shakeGame
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPlayData) Reset() {
	*x = UserPlayData{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPlayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPlayData) ProtoMessage() {}

func (x *UserPlayData) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPlayData.ProtoReflect.Descriptor instead.
func (*UserPlayData) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{0}
}

func (x *UserPlayData) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *UserPlayData) GetQuizGame() int32 {
	if x != nil {
		return x.QuizGame
	}
	return 0
}

func (x *UserPlayData) GetShakeGame() int32 {
	if x != nil {
		return x.ShakeGame
	}
	return 0
}

type RecentUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`                 // Tên người dùng
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"` // Tên đầy đủ
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                       // Email
	Photo         string                 `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`                       // Avatar người dùng
	Vouchers      int32                  `protobuf:"varint,5,opt,name=vouchers,proto3" json:"vouchers,omitempty"`                // Số lượng voucher nhận được
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecentUser) Reset() {
	*x = RecentUser{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecentUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentUser) ProtoMessage() {}

func (x *RecentUser) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentUser.ProtoReflect.Descriptor instead.
func (*RecentUser) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{1}
}

func (x *RecentUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RecentUser) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *RecentUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RecentUser) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *RecentUser) GetVouchers() int32 {
	if x != nil {
		return x.Vouchers
	}
	return 0
}

type VoucherStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`                           // Tháng (YYYY-MM)
	QuizGame      int32                  `protobuf:"varint,2,opt,name=quiz_game,json=quizGame,proto3" json:"quiz_game,omitempty"`    // Số lượng voucher từ quizGame
	ShakeGame     int32                  `protobuf:"varint,3,opt,name=shake_game,json=shakeGame,proto3" json:"shake_game,omitempty"` // Số lượng voucher từ shakeGame
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoucherStats) Reset() {
	*x = VoucherStats{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoucherStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoucherStats) ProtoMessage() {}

func (x *VoucherStats) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoucherStats.ProtoReflect.Descriptor instead.
func (*VoucherStats) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{2}
}

func (x *VoucherStats) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *VoucherStats) GetQuizGame() int32 {
	if x != nil {
		return x.QuizGame
	}
	return 0
}

func (x *VoucherStats) GetShakeGame() int32 {
	if x != nil {
		return x.ShakeGame
	}
	return 0
}

type UserStoreStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       int64                  `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                     // ID cửa hàng
	StoreName     string                 `protobuf:"bytes,2,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`                // Tên cửa hàng
	TotalUserPlay int32                  `protobuf:"varint,3,opt,name=total_user_play,json=totalUserPlay,proto3" json:"total_user_play,omitempty"` // Tổng số user chơi tại cửa hàng
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStoreStats) Reset() {
	*x = UserStoreStats{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStoreStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStoreStats) ProtoMessage() {}

func (x *UserStoreStats) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStoreStats.ProtoReflect.Descriptor instead.
func (*UserStoreStats) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{3}
}

func (x *UserStoreStats) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *UserStoreStats) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *UserStoreStats) GetTotalUserPlay() int32 {
	if x != nil {
		return x.TotalUserPlay
	}
	return 0
}

type GetCmsOverviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"` // Owner của CMS
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCmsOverviewRequest) Reset() {
	*x = GetCmsOverviewRequest{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCmsOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCmsOverviewRequest) ProtoMessage() {}

func (x *GetCmsOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCmsOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetCmsOverviewRequest) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{4}
}

func (x *GetCmsOverviewRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type GetCmsOverviewResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TotalStore             int32                  `protobuf:"varint,1,opt,name=total_store,json=totalStore,proto3" json:"total_store,omitempty"`                                           // Tổng số cửa hàng
	TotalBranch            int32                  `protobuf:"varint,2,opt,name=total_branch,json=totalBranch,proto3" json:"total_branch,omitempty"`                                        // Tổng số chi nhánh
	TotalEvent             int32                  `protobuf:"varint,3,opt,name=total_event,json=totalEvent,proto3" json:"total_event,omitempty"`                                           // Tổng số sự kiện
	TotalUserPlay          int32                  `protobuf:"varint,4,opt,name=total_user_play,json=totalUserPlay,proto3" json:"total_user_play,omitempty"`                                // Tổng số người dùng chơi
	LastMonthTotalUserPlay int32                  `protobuf:"varint,5,opt,name=last_month_total_user_play,json=lastMonthTotalUserPlay,proto3" json:"last_month_total_user_play,omitempty"` // Tổng số người dùng chơi tháng trước
	ChartUserPlay          []*UserPlayData        `protobuf:"bytes,6,rep,name=chart_user_play,json=chartUserPlay,proto3" json:"chart_user_play,omitempty"`                                 // Thống kê số lượng user chơi game theo ngày
	ListRecentUser         []*RecentUser          `protobuf:"bytes,7,rep,name=list_recent_user,json=listRecentUser,proto3" json:"list_recent_user,omitempty"`                              // Danh sách người dùng mới nhận voucher
	ChartVoucher           []*VoucherStats        `protobuf:"bytes,8,rep,name=chart_voucher,json=chartVoucher,proto3" json:"chart_voucher,omitempty"`                                      // Thống kê voucher theo tháng
	ChartUserStore         []*UserStoreStats      `protobuf:"bytes,9,rep,name=chart_user_store,json=chartUserStore,proto3" json:"chart_user_store,omitempty"`                              // Thống kê user theo cửa hàng
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetCmsOverviewResponse) Reset() {
	*x = GetCmsOverviewResponse{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCmsOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCmsOverviewResponse) ProtoMessage() {}

func (x *GetCmsOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCmsOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetCmsOverviewResponse) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{5}
}

func (x *GetCmsOverviewResponse) GetTotalStore() int32 {
	if x != nil {
		return x.TotalStore
	}
	return 0
}

func (x *GetCmsOverviewResponse) GetTotalBranch() int32 {
	if x != nil {
		return x.TotalBranch
	}
	return 0
}

func (x *GetCmsOverviewResponse) GetTotalEvent() int32 {
	if x != nil {
		return x.TotalEvent
	}
	return 0
}

func (x *GetCmsOverviewResponse) GetTotalUserPlay() int32 {
	if x != nil {
		return x.TotalUserPlay
	}
	return 0
}

func (x *GetCmsOverviewResponse) GetLastMonthTotalUserPlay() int32 {
	if x != nil {
		return x.LastMonthTotalUserPlay
	}
	return 0
}

func (x *GetCmsOverviewResponse) GetChartUserPlay() []*UserPlayData {
	if x != nil {
		return x.ChartUserPlay
	}
	return nil
}

func (x *GetCmsOverviewResponse) GetListRecentUser() []*RecentUser {
	if x != nil {
		return x.ListRecentUser
	}
	return nil
}

func (x *GetCmsOverviewResponse) GetChartVoucher() []*VoucherStats {
	if x != nil {
		return x.ChartVoucher
	}
	return nil
}

func (x *GetCmsOverviewResponse) GetChartUserStore() []*UserStoreStats {
	if x != nil {
		return x.ChartUserStore
	}
	return nil
}

type GetAdminCmsOverviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"` // Owner của CMS
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdminCmsOverviewRequest) Reset() {
	*x = GetAdminCmsOverviewRequest{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminCmsOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminCmsOverviewRequest) ProtoMessage() {}

func (x *GetAdminCmsOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminCmsOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetAdminCmsOverviewRequest) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{6}
}

func (x *GetAdminCmsOverviewRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type AdminUserPlayGroupByPartnerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                                   // Username của partner
	TotalUserPlay int32                  `protobuf:"varint,3,opt,name=total_user_play,json=totalUserPlay,proto3" json:"total_user_play,omitempty"` // Tổng số user chơi game của partner này
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminUserPlayGroupByPartnerStats) Reset() {
	*x = AdminUserPlayGroupByPartnerStats{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUserPlayGroupByPartnerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserPlayGroupByPartnerStats) ProtoMessage() {}

func (x *AdminUserPlayGroupByPartnerStats) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserPlayGroupByPartnerStats.ProtoReflect.Descriptor instead.
func (*AdminUserPlayGroupByPartnerStats) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{7}
}

func (x *AdminUserPlayGroupByPartnerStats) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AdminUserPlayGroupByPartnerStats) GetTotalUserPlay() int32 {
	if x != nil {
		return x.TotalUserPlay
	}
	return 0
}

type GetAdminCmsOverviewResponse struct {
	state                       protoimpl.MessageState              `protogen:"open.v1"`
	TotalPartner                int32                               `protobuf:"varint,1,opt,name=total_partner,json=totalPartner,proto3" json:"total_partner,omitempty"` // Tổng số Partner
	TotalPartnerLastMonth       int32                               `protobuf:"varint,2,opt,name=total_partner_last_month,json=totalPartnerLastMonth,proto3" json:"total_partner_last_month,omitempty"`
	TotalUser                   int32                               `protobuf:"varint,3,opt,name=total_user,json=totalUser,proto3" json:"total_user,omitempty"` // Tổng user
	TotalUserLastMonth          int32                               `protobuf:"varint,4,opt,name=total_user_last_month,json=totalUserLastMonth,proto3" json:"total_user_last_month,omitempty"`
	TotalBranch                 int32                               `protobuf:"varint,5,opt,name=total_branch,json=totalBranch,proto3" json:"total_branch,omitempty"` // Tổng số chi nhánh
	TotalBranchLastMonth        int32                               `protobuf:"varint,6,opt,name=total_branch_last_month,json=totalBranchLastMonth,proto3" json:"total_branch_last_month,omitempty"`
	TotalEarning                float64                             `protobuf:"fixed64,7,opt,name=total_earning,json=totalEarning,proto3" json:"total_earning,omitempty"` // Tổng doanh thu
	TotalEarningLastMonth       float64                             `protobuf:"fixed64,8,opt,name=total_earning_last_month,json=totalEarningLastMonth,proto3" json:"total_earning_last_month,omitempty"`
	ChartEventCreated           []*UserPlayData                     `protobuf:"bytes,9,rep,name=chart_event_created,json=chartEventCreated,proto3" json:"chart_event_created,omitempty"`                                      // Thống kê số lượng user chơi game theo ngày
	ChartUserPlayGame           []*VoucherStats                     `protobuf:"bytes,10,rep,name=chart_user_play_game,json=chartUserPlayGame,proto3" json:"chart_user_play_game,omitempty"`                                   // Danh sách người dùng mới nhận voucher
	ChartUserPlayGroupByPartner []*AdminUserPlayGroupByPartnerStats `protobuf:"bytes,11,rep,name=chart_user_play_group_by_partner,json=chartUserPlayGroupByPartner,proto3" json:"chart_user_play_group_by_partner,omitempty"` // Thống kê voucher theo tháng
	ListRecentPartners          []*RecentUser                       `protobuf:"bytes,12,rep,name=list_recent_partners,json=listRecentPartners,proto3" json:"list_recent_partners,omitempty"`                                  // Thống kê user theo cửa hàng
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *GetAdminCmsOverviewResponse) Reset() {
	*x = GetAdminCmsOverviewResponse{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminCmsOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminCmsOverviewResponse) ProtoMessage() {}

func (x *GetAdminCmsOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminCmsOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetAdminCmsOverviewResponse) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{8}
}

func (x *GetAdminCmsOverviewResponse) GetTotalPartner() int32 {
	if x != nil {
		return x.TotalPartner
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalPartnerLastMonth() int32 {
	if x != nil {
		return x.TotalPartnerLastMonth
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalUser() int32 {
	if x != nil {
		return x.TotalUser
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalUserLastMonth() int32 {
	if x != nil {
		return x.TotalUserLastMonth
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalBranch() int32 {
	if x != nil {
		return x.TotalBranch
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalBranchLastMonth() int32 {
	if x != nil {
		return x.TotalBranchLastMonth
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalEarning() float64 {
	if x != nil {
		return x.TotalEarning
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetTotalEarningLastMonth() float64 {
	if x != nil {
		return x.TotalEarningLastMonth
	}
	return 0
}

func (x *GetAdminCmsOverviewResponse) GetChartEventCreated() []*UserPlayData {
	if x != nil {
		return x.ChartEventCreated
	}
	return nil
}

func (x *GetAdminCmsOverviewResponse) GetChartUserPlayGame() []*VoucherStats {
	if x != nil {
		return x.ChartUserPlayGame
	}
	return nil
}

func (x *GetAdminCmsOverviewResponse) GetChartUserPlayGroupByPartner() []*AdminUserPlayGroupByPartnerStats {
	if x != nil {
		return x.ChartUserPlayGroupByPartner
	}
	return nil
}

func (x *GetAdminCmsOverviewResponse) GetListRecentPartners() []*RecentUser {
	if x != nil {
		return x.ListRecentPartners
	}
	return nil
}

type FakeCmsOverviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FakeCmsOverviewRequest) Reset() {
	*x = FakeCmsOverviewRequest{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FakeCmsOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FakeCmsOverviewRequest) ProtoMessage() {}

func (x *FakeCmsOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FakeCmsOverviewRequest.ProtoReflect.Descriptor instead.
func (*FakeCmsOverviewRequest) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{9}
}

type FakeCmsOverviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FakeCmsOverviewResponse) Reset() {
	*x = FakeCmsOverviewResponse{}
	mi := &file_counterpart_rpc_cms_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FakeCmsOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FakeCmsOverviewResponse) ProtoMessage() {}

func (x *FakeCmsOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_counterpart_rpc_cms_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FakeCmsOverviewResponse.ProtoReflect.Descriptor instead.
func (*FakeCmsOverviewResponse) Descriptor() ([]byte, []int) {
	return file_counterpart_rpc_cms_proto_rawDescGZIP(), []int{10}
}

var File_counterpart_rpc_cms_proto protoreflect.FileDescriptor

var file_counterpart_rpc_cms_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x2f, 0x72, 0x70,
	0x63, 0x5f, 0x63, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x76, 0x6f, 0x75,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75,
	0x69, 0x7a, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x69, 0x7a, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0x60, 0x0a, 0x0c, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09,
	0x71, 0x75, 0x69, 0x7a, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x71, 0x75, 0x69, 0x7a, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x22, 0x2d, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x6d, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0xe6, 0x03, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x6d, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x12,
	0x3f, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x6f, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x12, 0x3f, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x6f, 0x75,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x6f, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x43, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x6f, 0x75, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x6d, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x20, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79,
	0x22, 0xd5, 0x05, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6d, 0x73,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a,
	0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x37, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x47, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x6f, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x76, 0x6f, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x11, 0x63, 0x68, 0x61, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x72, 0x0a, 0x20, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x6f, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x1b, 0x63, 0x68, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12,
	0x47, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x76, 0x6f, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x46, 0x61, 0x6b, 0x65,
	0x43, 0x6d, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x46, 0x61, 0x6b, 0x65, 0x43, 0x6d, 0x73, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a,
	0x14, 0x56, 0x4f, 0x55, 0x2d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_counterpart_rpc_cms_proto_rawDescOnce sync.Once
	file_counterpart_rpc_cms_proto_rawDescData = file_counterpart_rpc_cms_proto_rawDesc
)

func file_counterpart_rpc_cms_proto_rawDescGZIP() []byte {
	file_counterpart_rpc_cms_proto_rawDescOnce.Do(func() {
		file_counterpart_rpc_cms_proto_rawDescData = protoimpl.X.CompressGZIP(file_counterpart_rpc_cms_proto_rawDescData)
	})
	return file_counterpart_rpc_cms_proto_rawDescData
}

var file_counterpart_rpc_cms_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_counterpart_rpc_cms_proto_goTypes = []any{
	(*UserPlayData)(nil),                     // 0: vou.proto.UserPlayData
	(*RecentUser)(nil),                       // 1: vou.proto.RecentUser
	(*VoucherStats)(nil),                     // 2: vou.proto.VoucherStats
	(*UserStoreStats)(nil),                   // 3: vou.proto.UserStoreStats
	(*GetCmsOverviewRequest)(nil),            // 4: vou.proto.GetCmsOverviewRequest
	(*GetCmsOverviewResponse)(nil),           // 5: vou.proto.GetCmsOverviewResponse
	(*GetAdminCmsOverviewRequest)(nil),       // 6: vou.proto.GetAdminCmsOverviewRequest
	(*AdminUserPlayGroupByPartnerStats)(nil), // 7: vou.proto.AdminUserPlayGroupByPartnerStats
	(*GetAdminCmsOverviewResponse)(nil),      // 8: vou.proto.GetAdminCmsOverviewResponse
	(*FakeCmsOverviewRequest)(nil),           // 9: vou.proto.FakeCmsOverviewRequest
	(*FakeCmsOverviewResponse)(nil),          // 10: vou.proto.FakeCmsOverviewResponse
}
var file_counterpart_rpc_cms_proto_depIdxs = []int32{
	0, // 0: vou.proto.GetCmsOverviewResponse.chart_user_play:type_name -> vou.proto.UserPlayData
	1, // 1: vou.proto.GetCmsOverviewResponse.list_recent_user:type_name -> vou.proto.RecentUser
	2, // 2: vou.proto.GetCmsOverviewResponse.chart_voucher:type_name -> vou.proto.VoucherStats
	3, // 3: vou.proto.GetCmsOverviewResponse.chart_user_store:type_name -> vou.proto.UserStoreStats
	0, // 4: vou.proto.GetAdminCmsOverviewResponse.chart_event_created:type_name -> vou.proto.UserPlayData
	2, // 5: vou.proto.GetAdminCmsOverviewResponse.chart_user_play_game:type_name -> vou.proto.VoucherStats
	7, // 6: vou.proto.GetAdminCmsOverviewResponse.chart_user_play_group_by_partner:type_name -> vou.proto.AdminUserPlayGroupByPartnerStats
	1, // 7: vou.proto.GetAdminCmsOverviewResponse.list_recent_partners:type_name -> vou.proto.RecentUser
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_counterpart_rpc_cms_proto_init() }
func file_counterpart_rpc_cms_proto_init() {
	if File_counterpart_rpc_cms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_counterpart_rpc_cms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_counterpart_rpc_cms_proto_goTypes,
		DependencyIndexes: file_counterpart_rpc_cms_proto_depIdxs,
		MessageInfos:      file_counterpart_rpc_cms_proto_msgTypes,
	}.Build()
	File_counterpart_rpc_cms_proto = out.File
	file_counterpart_rpc_cms_proto_rawDesc = nil
	file_counterpart_rpc_cms_proto_goTypes = nil
	file_counterpart_rpc_cms_proto_depIdxs = nil
}

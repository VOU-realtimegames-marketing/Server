// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_answer.sql

package db

import (
	"context"
)

const createUserAnswer = `-- name: CreateUserAnswer :one
INSERT INTO user_answers (
  username,
  event_id
) VALUES (
  $1, $2
) RETURNING id, username, event_id, num_correct
`

type CreateUserAnswerParams struct {
	Username string `json:"username"`
	EventID  int64  `json:"event_id"`
}

func (q *Queries) CreateUserAnswer(ctx context.Context, arg CreateUserAnswerParams) (UserAnswer, error) {
	row := q.db.QueryRow(ctx, createUserAnswer, arg.Username, arg.EventID)
	var i UserAnswer
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.EventID,
		&i.NumCorrect,
	)
	return i, err
}

const updateUserAnswer = `-- name: UpdateUserAnswer :one
UPDATE user_answers
SET
  num_correct = num_correct + 1
WHERE username = $1 AND event_id = $2
RETURNING id, username, event_id, num_correct
`

type UpdateUserAnswerParams struct {
	Username string `json:"username"`
	EventID  int64  `json:"event_id"`
}

func (q *Queries) UpdateUserAnswer(ctx context.Context, arg UpdateUserAnswerParams) (UserAnswer, error) {
	row := q.db.QueryRow(ctx, updateUserAnswer, arg.Username, arg.EventID)
	var i UserAnswer
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.EventID,
		&i.NumCorrect,
	)
	return i, err
}

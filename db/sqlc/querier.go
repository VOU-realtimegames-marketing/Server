// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateBranch(ctx context.Context, arg CreateBranchParams) (Branch, error)
	CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error)
	CreateQuiz(ctx context.Context, arg CreateQuizParams) (Quiz, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateStore(ctx context.Context, arg CreateStoreParams) (Store, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVerifyEmail(ctx context.Context, arg CreateVerifyEmailParams) (VerifyEmail, error)
	DeleteBranch(ctx context.Context, id int64) error
	DeleteStore(ctx context.Context, arg DeleteStoreParams) error
	GetEventById(ctx context.Context, id int64) (Event, error)
	GetEventByIdAndOwner(ctx context.Context, arg GetEventByIdAndOwnerParams) (Event, error)
	GetQuizzesByEventId(ctx context.Context, eventID int64) (Quiz, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetStoreByIdAndOwner(ctx context.Context, arg GetStoreByIdAndOwnerParams) (Store, error)
	GetUser(ctx context.Context, arg GetUserParams) (User, error)
	ListBranchs(ctx context.Context, storeID int64) ([]Branch, error)
	ListEvents(ctx context.Context) ([]ListEventsRow, error)
	ListEventsOfOwner(ctx context.Context, owner string) ([]ListEventsOfOwnerRow, error)
	ListStoresOfOwner(ctx context.Context, owner string) ([]Store, error)
	UpdateEvent(ctx context.Context, arg UpdateEventParams) (Event, error)
	UpdateStore(ctx context.Context, arg UpdateStoreParams) (Store, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateVerifyEmail(ctx context.Context, arg UpdateVerifyEmailParams) (VerifyEmail, error)
}

var _ Querier = (*Queries)(nil)

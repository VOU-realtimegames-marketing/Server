// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: quiz.sql

package db

import (
	"context"
)

const createQuiz = `-- name: CreateQuiz :one
INSERT INTO quizzes (
  event_id,
  content,
  quiz_genre
) VALUES (
  $1, $2, $3
) RETURNING id, event_id, content, quiz_genre, created_at
`

type CreateQuizParams struct {
	EventID   int64  `json:"event_id"`
	Content   []byte `json:"content"`
	QuizGenre string `json:"quiz_genre"`
}

func (q *Queries) CreateQuiz(ctx context.Context, arg CreateQuizParams) (Quiz, error) {
	row := q.db.QueryRow(ctx, createQuiz, arg.EventID, arg.Content, arg.QuizGenre)
	var i Quiz
	err := row.Scan(
		&i.ID,
		&i.EventID,
		&i.Content,
		&i.QuizGenre,
		&i.CreatedAt,
	)
	return i, err
}

const getQuizzesByEventId = `-- name: GetQuizzesByEventId :one
SELECT id, event_id, content, quiz_genre, created_at FROM quizzes
WHERE event_id = $1 LIMIT 1
`

func (q *Queries) GetQuizzesByEventId(ctx context.Context, eventID int64) (Quiz, error) {
	row := q.db.QueryRow(ctx, getQuizzesByEventId, eventID)
	var i Quiz
	err := row.Scan(
		&i.ID,
		&i.EventID,
		&i.Content,
		&i.QuizGenre,
		&i.CreatedAt,
	)
	return i, err
}
